; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\rvmdk\qs-autonomous.o --asm_dir=.\rvmdk\ --list_dir=.\rvmdk\ --depend=.\rvmdk\qs-autonomous.d --cpu=Cortex-M3 --apcs=interwork -I. -I.. -I..\..\.. -IC:\Keil\ARM\RV31\Inc -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Luminary -D__MICROLIB -Drvmdk -DPART_LM3S9B96 -DTARGET_IS_TEMPEST_RB1 -DUART_BUFFERED --omf_browse=.\rvmdk\qs-autonomous.crf qs-autonomous.c]
                          THUMB

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;118    int
;;;119    main (void)
000000  f04f7480          MOV      r4,#0x1000000
;;;120    {
;;;121        //
;;;122        // Set the system clock to run at 50MHz from the PLL
;;;123        //
;;;124        ROM_SysCtlClockSet(SYSCTL_SYSDIV_4 | SYSCTL_USE_PLL | SYSCTL_OSC_MAIN |
000004  6c60              LDR      r0,[r4,#0x44]
000006  6dc1              LDR      r1,[r0,#0x5c]
000008  4812              LDR      r0,|L1.84|
00000a  4788              BLX      r1
;;;125                           SYSCTL_XTAL_16MHZ);
;;;126    
;;;127        //
;;;128        // Enable UART0, to be used as a serial console.
;;;129        //
;;;130        ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOA);
00000c  6c60              LDR      r0,[r4,#0x44]
00000e  6981              LDR      r1,[r0,#0x18]
000010  4811              LDR      r0,|L1.88|
000012  4788              BLX      r1
;;;131        ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_UART0);
000014  6c60              LDR      r0,[r4,#0x44]
000016  6981              LDR      r1,[r0,#0x18]
000018  4810              LDR      r0,|L1.92|
00001a  4788              BLX      r1
;;;132        ROM_GPIOPinTypeUART(GPIO_PORTA_BASE, GPIO_PIN_0 | GPIO_PIN_1);
00001c  6a20              LDR      r0,[r4,#0x20]
00001e  2103              MOVS     r1,#3
000020  6d42              LDR      r2,[r0,#0x54]
000022  f04f2040          MOV      r0,#0x40004000
000026  4790              BLX      r2
;;;133    
;;;134        //
;;;135        // Initialize the UART standard I/O.
;;;136        //
;;;137        UARTStdioInit(0);
000028  2000              MOVS     r0,#0
00002a  f7fffffe          BL       UARTStdioInit
;;;138        UARTprintf("EVALBOT starting\n");
00002e  a00c              ADR      r0,|L1.96|
000030  f7fffffe          BL       UARTprintf
;;;139    
;;;140        //
;;;141        // Initialize the simple scheduler to use a tick rate of 100 Hz.
;;;142        //
;;;143        SchedulerInit(100);
000034  2064              MOVS     r0,#0x64
000036  f7fffffe          BL       SchedulerInit
;;;144    
;;;145        //
;;;146        // Initialize all the tasks used in the example.
;;;147        //
;;;148        DriveInit();
00003a  f7fffffe          BL       DriveInit
;;;149        DisplayTaskInit();
00003e  f7fffffe          BL       DisplayTaskInit
;;;150        LEDTaskInit();
000042  f7fffffe          BL       LEDTaskInit
;;;151        SoundTaskInit();
000046  f7fffffe          BL       SoundTaskInit
;;;152        AutoTaskInit();
00004a  f7fffffe          BL       AutoTaskInit
                  |L1.78|
;;;153    
;;;154        //
;;;155        // Enter a forever loop and call the scheduler.  The scheduler will
;;;156        // periodically call all the tasks in the system according to the timeout
;;;157        // value of each task.
;;;158        //
;;;159        for(;;)
;;;160        {
;;;161            SchedulerRun();
00004e  f7fffffe          BL       SchedulerRun
000052  e7fc              B        |L1.78|
;;;162        }
;;;163    }
                          ENDP

                  |L1.84|
                          DCD      0x01c00540
                  |L1.88|
                          DCD      0x20000001
                  |L1.92|
                          DCD      0x10000001
                  |L1.96|
000060  4556414c          DCB      "EVALBOT starting\n",0
000064  424f5420
000068  73746172
00006c  74696e67
000070  0a00    
000072  00                DCB      0
000073  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=10

                  sDMAControlTable
                          %        1024

                          AREA ||.data||, DATA, ALIGN=2

                  g_psSchedulerTable
                          DCD      DriveTask
                          DCD      0x00000000
                          DCD      0x0000000a
                          DCD      0x00000000
000010  01000000          DCB      0x01,0x00,0x00,0x00
                          DCD      DisplayTask
                          DCD      0x00000000
                          DCD      0x00000005
                          DCD      0x00000000
000024  01000000          DCB      0x01,0x00,0x00,0x00
                          DCD      LEDTask
                          DCD      0x00000000
                          DCD      0x00000064
                          DCD      0x00000000
000038  01000000          DCB      0x01,0x00,0x00,0x00
                          DCD      SoundTask
                          DCD      0x00000000
                          DCD      0x00000001
                          DCD      0x00000000
00004c  01000000          DCB      0x01,0x00,0x00,0x00
                          DCD      AutoTask
                          DCD      0x00000000
                          DCD      0x0000000a
                          DCD      0x00000000
000060  01000000          DCB      0x01,0x00,0x00,0x00

                          AREA ||area_number.6||, DATA, ALIGN=2

                          EXPORTAS ||area_number.6||, ||.data||
                  g_ulSchedulerNumTasks
                          DCD      0x00000005

                  __ARM_use_no_argv EQU 0
