


ARM Macro Assembler    Page 1 


    1 00000000         ;; TG 09/2012 - Evalbot (Cortex M3 de Texas Instrument)
    2 00000000         ;; fait clignoter les leds connectées au port GPIO_F
    3 00000000                 AREA             READWRITE
    4 00000000         
    5 00000000 01      tab     DCB              0x1
    6 00000001 02      tab2    DCB              0x2
    7 00000002         
    8 00000002                 AREA             |.text|, CODE, READONLY
    9 00000000         
   10 00000000         
   11 00000000 400FE108 
                       SYSCTL_PERIPH
                               EQU              0x400FE108  ;SYSCTL_RCGC2_R : p
                                                            our enable clock (p
                                                            291 datasheet de lm
                                                            3s9b92.pdf)
   12 00000000 40025000 
                       GPIO_PORTF_BASE
                               EQU              0x40025000  ; voir chap.8 "GPIO
                                                            ": page 416 de lm3s
                                                            9B92.pdf
   13 00000000 00000400 
                       GPIO_O_DIR
                               EQU              0x00000400  ; GPIO Direction  (
                                                            p417 de lm3s9B92.pd
                                                            f)
   14 00000000 00000500 
                       GPIO_O_DR2R
                               EQU              0x00000500  ; GPIO 2-mA Drive S
                                                            elect (p428 de lm3s
                                                            9B92.pdf)
   15 00000000 0000051C 
                       GPIO_O_DEN
                               EQU              0x0000051C  ; GPIO Digital Enab
                                                            le (p437 de lm3s9B9
                                                            2.pdf)
   16 00000000         ; Pour être "propre" il faudrait aussi s'assurer que les
                       
   17 00000000         ;autres registres de configuration sont a 0 (ce qui est 
                       le
   18 00000000         ;cas a l'init.)
   19 00000000         
   20 00000000         
   21 00000000 00000010 
                       PORT4   EQU              0x10        ;led sur port 4
   22 00000000 00000020 
                       PORT5   EQU              0x20        ;led sur port 5
   23 00000000         
   24 00000000         
   25 00000000 002FFFFF 
                       DUREE   EQU              0x002FFFFF
   26 00000000         
   27 00000000                 ENTRY
   28 00000000                 EXPORT           __main
   29 00000000         __main
   30 00000000 4911            LDR              R1,=tab
   31 00000002 680A            LDR              R2,[R1]
   32 00000004         
   33 00000004 4E11            ldr              r6, = SYSCTL_PERIPH



ARM Macro Assembler    Page 2 


   34 00000006 F04F 0020       mov              r0, #0x00000020 ;;Enable clock 
                                                            sur GPIOF où sont b
                                                            ranchés les leds
   35 0000000A 6030            str              r0, [r6]
   36 0000000C         
   37 0000000C BF00            nop                          ; tres tres importa
                                                            nt....(beaucoup tem
                                                            ps perdu, cf petite
                                                             note p413!)
   38 0000000E BF00            nop                          ; "There must be  a
                                                             delay of 3 system 
                                                            clocks before any G
                                                            PIO reg. access
   39 00000010 BF00            nop                          ; pas necessaire en
                                                             simu  ou en debbug
                                                             step by step...@#@
                                                            ! :-(
   40 00000012         
   41 00000012 4E0F            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DI
R 
                                                            ;2 Pins du portF en
                                                             sortie
   42 00000014 F04F 0030       ldr              r0, = PORT4 + PORT5
   43 00000018 6030            str              r0, [r6]
   44 0000001A         
   45 0000001A 4E0E            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DE
N 
                                                            ;;Enable Digital Fu
                                                            nction (p316 )
   46 0000001C F04F 0030       ldr              r0, = PORT4 + PORT5
   47 00000020 6030            str              r0, [r6]
   48 00000022         
   49 00000022 4E0D            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DR
2R 
                                                            ;; Choix de l'inten
                                                            sité de sortie (2mA
                                                            )
   50 00000024 F04F 0030       ldr              r0, = PORT4 + PORT5
   51 00000028 6030            str              r0, [r6]
   52 0000002A         
   53 0000002A F04F 0200       mov              r2, #0x000  ;pour eteindre tout
                                                            
   54 0000002E         
   55 0000002E         ;Allume les 2 leds
   56 0000002E F04F 0330       mov              r3, #(PORT4 + PORT5) ;Allume po
                                                            rtF broche 4et 5 : 
                                                            00110000
   57 00000032 4E0A            ldr              r6, = GPIO_PORTF_BASE+ ((PORT4+
PORT5)<<2) 
                                                            ; @data Register = 
                                                            @base + (mask<<2)
   58 00000034         
   59 00000034         ;Pour allumer seulement la led broche 4 sans toucher au 
                       reste (led 5)
   60 00000034         ;mov r3, #PORT4       ;Allume portF broche 4 : 00010000
   61 00000034         ;ldr r6, = GPIO_PORTF_BASE+ (PORT4<<2) ; @data Register 
                       = @base + (mask<<2)
   62 00000034         
   63 00000034         ;on peut aussi allumer la led 4 comme ca => ca eteint la



ARM Macro Assembler    Page 3 


                        led 5 si allumée
   64 00000034         ;mov r3, #PORT5       ;Allume portF broche 4et 5 : 00110
                       000
   65 00000034         ;ldr r6, = GPIO_PORTF_BASE+ ((PORT4+PORT5)<<2) ; @data R
                       egister = @base + (mask<<2)
   66 00000034         loop
   67 00000034 6032            str              r2, [r6]    ;Eteint tout car r2
                                                             = 0x00      
   68 00000036 490A            ldr              r1, = DUREE ;pour la duree de l
                                                            a boucle d'attente1
                                                             (wait1)
   69 00000038         
   70 00000038 3901    wait1   subs             r1, #1
   71 0000003A D1FD            bne              wait1
   72 0000003C         
   73 0000003C 6033            str              r3, [r6]    ;Allume en fonction
                                                             du contenu de r3
   74 0000003E 4908            ldr              r1, = DUREE ;pour la duree de l
                                                            a boucle d'attente2
                                                             (wait2)
   75 00000040         
   76 00000040 3901    wait2   subs             r1, #1
   77 00000042 D1FD            bne              wait2
   78 00000044         
   79 00000044 E7F6            b                loop
   80 00000046                 END
              00 00 00000000 
              400FE108 
              40025400 
              4002551C 
              40025500 
              400250C0 
              002FFFFF 
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=BlinkyAS
MTG.d -oBlinkyASMTG.o -IC:\Keil\ARM\RV31\Inc -IC:\Keil\ARM\CMSIS\Include -IC:\K
eil\ARM\Inc\Luminary --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1
" --list=BlinkyASMTG.lst BlinkyASMTG.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

READWRITE 00000000

Symbol: READWRITE
   Definitions
      At line 3 in file BlinkyASMTG.s
   Uses
      None
Comment: READWRITE unused
tab 00000000

Symbol: tab
   Definitions
      At line 5 in file BlinkyASMTG.s
   Uses
      At line 30 in file BlinkyASMTG.s
Comment: tab used once
tab2 00000001

Symbol: tab2
   Definitions
      At line 6 in file BlinkyASMTG.s
   Uses
      None
Comment: tab2 unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 8 in file BlinkyASMTG.s
   Uses
      None
Comment: .text unused
__main 00000000

Symbol: __main
   Definitions
      At line 29 in file BlinkyASMTG.s
   Uses
      At line 28 in file BlinkyASMTG.s
Comment: __main used once
loop 00000034

Symbol: loop
   Definitions
      At line 66 in file BlinkyASMTG.s
   Uses
      At line 79 in file BlinkyASMTG.s
Comment: loop used once
wait1 00000038

Symbol: wait1
   Definitions
      At line 70 in file BlinkyASMTG.s
   Uses
      At line 71 in file BlinkyASMTG.s
Comment: wait1 used once
wait2 00000040

Symbol: wait2
   Definitions
      At line 76 in file BlinkyASMTG.s
   Uses
      At line 77 in file BlinkyASMTG.s
Comment: wait2 used once
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DUREE 002FFFFF

Symbol: DUREE
   Definitions
      At line 25 in file BlinkyASMTG.s
   Uses
      At line 68 in file BlinkyASMTG.s
      At line 74 in file BlinkyASMTG.s

GPIO_O_DEN 0000051C

Symbol: GPIO_O_DEN
   Definitions
      At line 15 in file BlinkyASMTG.s
   Uses
      At line 45 in file BlinkyASMTG.s
Comment: GPIO_O_DEN used once
GPIO_O_DIR 00000400

Symbol: GPIO_O_DIR
   Definitions
      At line 13 in file BlinkyASMTG.s
   Uses
      At line 41 in file BlinkyASMTG.s
Comment: GPIO_O_DIR used once
GPIO_O_DR2R 00000500

Symbol: GPIO_O_DR2R
   Definitions
      At line 14 in file BlinkyASMTG.s
   Uses
      At line 49 in file BlinkyASMTG.s
Comment: GPIO_O_DR2R used once
GPIO_PORTF_BASE 40025000

Symbol: GPIO_PORTF_BASE
   Definitions
      At line 12 in file BlinkyASMTG.s
   Uses
      At line 41 in file BlinkyASMTG.s
      At line 45 in file BlinkyASMTG.s
      At line 49 in file BlinkyASMTG.s
      At line 57 in file BlinkyASMTG.s

PORT4 00000010

Symbol: PORT4
   Definitions
      At line 21 in file BlinkyASMTG.s
   Uses
      At line 42 in file BlinkyASMTG.s
      At line 46 in file BlinkyASMTG.s
      At line 50 in file BlinkyASMTG.s
      At line 56 in file BlinkyASMTG.s
      At line 57 in file BlinkyASMTG.s

PORT5 00000020

Symbol: PORT5



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 22 in file BlinkyASMTG.s
   Uses
      At line 42 in file BlinkyASMTG.s
      At line 46 in file BlinkyASMTG.s
      At line 50 in file BlinkyASMTG.s
      At line 56 in file BlinkyASMTG.s
      At line 57 in file BlinkyASMTG.s

SYSCTL_PERIPH 400FE108

Symbol: SYSCTL_PERIPH
   Definitions
      At line 11 in file BlinkyASMTG.s
   Uses
      At line 33 in file BlinkyASMTG.s
Comment: SYSCTL_PERIPH used once
8 symbols
350 symbols in table
