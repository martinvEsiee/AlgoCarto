


ARM Macro Assembler    Page 1 


    1 00000000         ; <<< Use Configuration Wizard in Context Menu >>>
    2 00000000         ;*******************************************************
                       ***********************
    3 00000000         ;
    4 00000000         ; Startup.s - Startup code for use with Keil's uVision.
    5 00000000         ;
    6 00000000         ; Copyright (c) 2007-2011 Texas Instruments Incorporated
                       .  All rights reserved.
    7 00000000         ; Software License Agreement
    8 00000000         ; 
    9 00000000         ; Texas Instruments (TI) is supplying this software for 
                       use solely and
   10 00000000         ; exclusively on TI's microcontroller products. The soft
                       ware is owned by
   11 00000000         ; TI and/or its suppliers, and is protected under applic
                       able copyright
   12 00000000         ; laws. You may not combine this software with "viral" o
                       pen-source
   13 00000000         ; software in order to form a larger program.
   14 00000000         ; 
   15 00000000         ; THIS SOFTWARE IS PROVIDED "AS IS" AND WITH ALL FAULTS.
                       
   16 00000000         ; NO WARRANTIES, WHETHER EXPRESS, IMPLIED OR STATUTORY, 
                       INCLUDING, BUT
   17 00000000         ; NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY 
                       AND FITNESS FOR
   18 00000000         ; A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. TI SHALL 
                       NOT, UNDER ANY
   19 00000000         ; CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR C
                       ONSEQUENTIAL
   20 00000000         ; DAMAGES, FOR ANY REASON WHATSOEVER.
   21 00000000         ; 
   22 00000000         ; This is part of revision 7860 of the EK-LM3S1968 Firmw
                       are Package.
   23 00000000         ;
   24 00000000         ;*******************************************************
                       ***********************
   25 00000000         
   26 00000000         ;*******************************************************
                       ***********************
   27 00000000         ;
   28 00000000         ; <o> Stack Size (in Bytes) <0x0-0xFFFFFFFF:8>
   29 00000000         ;
   30 00000000         ;*******************************************************
                       ***********************
   31 00000000 00000100 
                       Stack   EQU              0x00000100
   32 00000000         
   33 00000000         ;*******************************************************
                       ***********************
   34 00000000         ;
   35 00000000         ; <o> Heap Size (in Bytes) <0x0-0xFFFFFFFF:8>
   36 00000000         ;
   37 00000000         ;*******************************************************
                       ***********************
   38 00000000 00000000 
                       Heap    EQU              0x00000000
   39 00000000         
   40 00000000         ;*******************************************************



ARM Macro Assembler    Page 2 


                       ***********************
   41 00000000         ;
   42 00000000         ; Allocate space for the stack.
   43 00000000         ;
   44 00000000         ;*******************************************************
                       ***********************
   45 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   46 00000000         StackMem
   47 00000000                 SPACE            Stack
   48 00000100         __initial_sp
   49 00000100         
   50 00000100         ;*******************************************************
                       ***********************
   51 00000100         ;
   52 00000100         ; Allocate space for the heap.
   53 00000100         ;
   54 00000100         ;*******************************************************
                       ***********************
   55 00000100                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   56 00000000         __heap_base
   57 00000000         HeapMem
   58 00000000                 SPACE            Heap
   59 00000000         __heap_limit
   60 00000000         
   61 00000000         ;*******************************************************
                       ***********************
   62 00000000         ;
   63 00000000         ; Indicate that the code in this file preserves 8-byte a
                       lignment of the stack.
   64 00000000         ;
   65 00000000         ;*******************************************************
                       ***********************
   66 00000000                 PRESERVE8
   67 00000000         
   68 00000000         ;*******************************************************
                       ***********************
   69 00000000         ;
   70 00000000         ; Place code into the reset code section.
   71 00000000         ;
   72 00000000         ;*******************************************************
                       ***********************
   73 00000000                 AREA             RESET, CODE, READONLY
   74 00000000                 THUMB
   75 00000000         
   76 00000000         ;*******************************************************
                       ***********************
   77 00000000         ;
   78 00000000         ; The vector table.
   79 00000000         ;
   80 00000000         ;*******************************************************
                       ***********************
   81 00000000                 EXPORT           __Vectors
   82 00000000         __Vectors
   83 00000000 00000100        DCD              StackMem + Stack ; Top of Stack
                                                            
   84 00000004 00000000        DCD              Reset_Handler ; Reset Handler
   85 00000008 00000000        DCD              NmiSR       ; NMI Handler



ARM Macro Assembler    Page 3 


   86 0000000C 00000000        DCD              FaultISR    ; Hard Fault Handle
                                                            r
   87 00000010 00000000        DCD              IntDefaultHandler ; The MPU fau
                                                            lt handler
   88 00000014 00000000        DCD              IntDefaultHandler ; The bus fau
                                                            lt handler
   89 00000018 00000000        DCD              IntDefaultHandler ; The usage f
                                                            ault handler
   90 0000001C 00000000        DCD              0           ; Reserved
   91 00000020 00000000        DCD              0           ; Reserved
   92 00000024 00000000        DCD              0           ; Reserved
   93 00000028 00000000        DCD              0           ; Reserved
   94 0000002C 00000000        DCD              IntDefaultHandler 
                                                            ; SVCall handler
   95 00000030 00000000        DCD              IntDefaultHandler ; Debug monit
                                                            or handler
   96 00000034 00000000        DCD              0           ; Reserved
   97 00000038 00000000        DCD              IntDefaultHandler ; The PendSV 
                                                            handler
   98 0000003C 00000000        DCD              IntDefaultHandler ; The SysTick
                                                             handler
   99 00000040 00000000        DCD              IntDefaultHandler ; GPIO Port A
                                                            
  100 00000044 00000000        DCD              IntDefaultHandler ; GPIO Port B
                                                            
  101 00000048 00000000        DCD              IntDefaultHandler ; GPIO Port C
                                                            
  102 0000004C 00000000        DCD              IntDefaultHandler ; GPIO Port D
                                                            
  103 00000050 00000000        DCD              IntDefaultHandler ; GPIO Port E
                                                            
  104 00000054 00000000        DCD              IntDefaultHandler 
                                                            ; UART0 Rx and Tx
  105 00000058 00000000        DCD              IntDefaultHandler 
                                                            ; UART1 Rx and Tx
  106 0000005C 00000000        DCD              IntDefaultHandler 
                                                            ; SSI0 Rx and Tx
  107 00000060 00000000        DCD              IntDefaultHandler ; I2C0 Master
                                                             and Slave
  108 00000064 00000000        DCD              IntDefaultHandler ; PWM Fault
  109 00000068 00000000        DCD              IntDefaultHandler 
                                                            ; PWM Generator 0
  110 0000006C 00000000        DCD              IntDefaultHandler 
                                                            ; PWM Generator 1
  111 00000070 00000000        DCD              IntDefaultHandler 
                                                            ; PWM Generator 2
  112 00000074 00000000        DCD              IntDefaultHandler ; Quadrature 
                                                            Encoder 0
  113 00000078 00000000        DCD              IntDefaultHandler 
                                                            ; ADC Sequence 0
  114 0000007C 00000000        DCD              IntDefaultHandler 
                                                            ; ADC Sequence 1
  115 00000080 00000000        DCD              IntDefaultHandler 
                                                            ; ADC Sequence 2
  116 00000084 00000000        DCD              IntDefaultHandler 
                                                            ; ADC Sequence 3
  117 00000088 00000000        DCD              IntDefaultHandler 
                                                            ; Watchdog timer
  118 0000008C 00000000        DCD              IntDefaultHandler ; Timer 0 sub



ARM Macro Assembler    Page 4 


                                                            timer A
  119 00000090 00000000        DCD              IntDefaultHandler ; Timer 0 sub
                                                            timer B
  120 00000094 00000000        DCD              IntDefaultHandler ; Timer 1 sub
                                                            timer A
  121 00000098 00000000        DCD              IntDefaultHandler ; Timer 1 sub
                                                            timer B
  122 0000009C 00000000        DCD              IntDefaultHandler ; Timer 2 sub
                                                            timer A
  123 000000A0 00000000        DCD              IntDefaultHandler ; Timer 2 sub
                                                            timer B
  124 000000A4 00000000        DCD              IntDefaultHandler ; Analog Comp
                                                            arator 0
  125 000000A8 00000000        DCD              IntDefaultHandler ; Analog Comp
                                                            arator 1
  126 000000AC 00000000        DCD              IntDefaultHandler ; Analog Comp
                                                            arator 2
  127 000000B0 00000000        DCD              IntDefaultHandler ; System Cont
                                                            rol (PLL, OSC, BO)
  128 000000B4 00000000        DCD              IntDefaultHandler 
                                                            ; FLASH Control
  129 000000B8 00000000        DCD              IntDefaultHandler ; GPIO Port F
                                                            
  130 000000BC 00000000        DCD              IntDefaultHandler ; GPIO Port G
                                                            
  131 000000C0 00000000        DCD              IntDefaultHandler ; GPIO Port H
                                                            
  132 000000C4 00000000        DCD              IntDefaultHandler 
                                                            ; UART2 Rx and Tx
  133 000000C8 00000000        DCD              IntDefaultHandler 
                                                            ; SSI1 Rx and Tx
  134 000000CC 00000000        DCD              IntDefaultHandler ; Timer 3 sub
                                                            timer A
  135 000000D0 00000000        DCD              IntDefaultHandler ; Timer 3 sub
                                                            timer B
  136 000000D4 00000000        DCD              IntDefaultHandler ; I2C1 Master
                                                             and Slave
  137 000000D8 00000000        DCD              IntDefaultHandler ; Quadrature 
                                                            Encoder 1
  138 000000DC 00000000        DCD              IntDefaultHandler ; CAN0
  139 000000E0 00000000        DCD              IntDefaultHandler ; CAN1
  140 000000E4 00000000        DCD              IntDefaultHandler ; CAN2
  141 000000E8 00000000        DCD              IntDefaultHandler ; Ethernet
  142 000000EC 00000000        DCD              IntDefaultHandler ; Hibernate
  143 000000F0         
  144 000000F0         ;*******************************************************
                       ***********************
  145 000000F0         ;
  146 000000F0         ; This is the code that gets called when the processor f
                       irst starts execution
  147 000000F0         ; following a reset event.
  148 000000F0         ;
  149 000000F0         ;*******************************************************
                       ***********************
  150 000000F0                 EXPORT           Reset_Handler
  151 000000F0         Reset_Handler
  152 000000F0         ;
  153 000000F0         ; Call the C library enty point that handles startup.  T
                       his will copy



ARM Macro Assembler    Page 5 


  154 000000F0         ; the .data section initializers from flash to SRAM and 
                       zero fill the
  155 000000F0         ; .bss section.
  156 000000F0         ;
  157 000000F0                 IMPORT           __main
  158 000000F0 F7FF BFFE       B                __main
  159 000000F4         
  160 000000F4         ;*******************************************************
                       ***********************
  161 000000F4         ;
  162 000000F4         ; This is the code that gets called when the processor r
                       eceives a NMI.  This
  163 000000F4         ; simply enters an infinite loop, preserving the system 
                       state for examination
  164 000000F4         ; by a debugger.
  165 000000F4         ;
  166 000000F4         ;*******************************************************
                       ***********************
  167 000000F4         NmiSR
  168 000000F4 E7FE            B                NmiSR
  169 000000F6         
  170 000000F6         ;*******************************************************
                       ***********************
  171 000000F6         ;
  172 000000F6         ; This is the code that gets called when the processor r
                       eceives a fault
  173 000000F6         ; interrupt.  This simply enters an infinite loop, prese
                       rving the system state
  174 000000F6         ; for examination by a debugger.
  175 000000F6         ;
  176 000000F6         ;*******************************************************
                       ***********************
  177 000000F6         FaultISR
  178 000000F6 E7FE            B                FaultISR
  179 000000F8         
  180 000000F8         ;*******************************************************
                       ***********************
  181 000000F8         ;
  182 000000F8         ; This is the code that gets called when the processor r
                       eceives an unexpected
  183 000000F8         ; interrupt.  This simply enters an infinite loop, prese
                       rving the system state
  184 000000F8         ; for examination by a debugger.
  185 000000F8         ;
  186 000000F8         ;*******************************************************
                       ***********************
  187 000000F8         IntDefaultHandler
  188 000000F8 E7FE            B                IntDefaultHandler
  189 000000FA         
  190 000000FA         ;*******************************************************
                       ***********************
  191 000000FA         ;
  192 000000FA         ; Make sure the end of this section is aligned.
  193 000000FA         ;
  194 000000FA         ;*******************************************************
                       ***********************
  195 000000FA 00 00           ALIGN
  196 000000FC         
  197 000000FC         ;*******************************************************



ARM Macro Assembler    Page 6 


                       ***********************
  198 000000FC         ;
  199 000000FC         ; Some code in the normal code section for initializing 
                       the heap and stack.
  200 000000FC         ;
  201 000000FC         ;*******************************************************
                       ***********************
  202 000000FC                 AREA             |.text|, CODE, READONLY
  203 00000000         
  204 00000000         ;*******************************************************
                       ***********************
  205 00000000         ;
  206 00000000         ; The function expected of the C library startup code fo
                       r defining the stack
  207 00000000         ; and heap memory locations.  For the C library version 
                       of the startup code,
  208 00000000         ; provide this function so that the C library initializa
                       tion code can find out
  209 00000000         ; the location of the stack and heap.
  210 00000000         ;
  211 00000000         ;*******************************************************
                       ***********************
  212 00000000                 IF               :DEF: __MICROLIB
  213 00000000                 EXPORT           __initial_sp
  214 00000000                 EXPORT           __heap_base
  215 00000000                 EXPORT           __heap_limit
  216 00000000                 ELSE
  225                          ENDIF
  226 00000000         
  227 00000000         ;*******************************************************
                       ***********************
  228 00000000         ;
  229 00000000         ; Make sure the end of this section is aligned.
  230 00000000         ;
  231 00000000         ;*******************************************************
                       ***********************
  232 00000000                 ALIGN
  233 00000000         
  234 00000000         ;*******************************************************
                       ***********************
  235 00000000         ;
  236 00000000         ; Tell the assembler that we're done.
  237 00000000         ;
  238 00000000         ;*******************************************************
                       ***********************
  239 00000000                 END
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=.\Flash\
Startup.d -o.\Flash\Startup.o -IC:\KeilEvalBot\ARM\RV31\Inc -IC:\KeilEvalBot\AR
M\CMSIS\Include -IC:\KeilEvalBot\ARM\Inc\Luminary --predefine="__EVAL SETA 1" -
-predefine="__MICROLIB SETA 1" --list=.\Flash\Startup.lst Startup.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 45 in file Startup.s
   Uses
      None
Comment: STACK unused
StackMem 00000000

Symbol: StackMem
   Definitions
      At line 46 in file Startup.s
   Uses
      At line 83 in file Startup.s
Comment: StackMem used once
__initial_sp 00000100

Symbol: __initial_sp
   Definitions
      At line 48 in file Startup.s
   Uses
      At line 213 in file Startup.s
Comment: __initial_sp used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 55 in file Startup.s
   Uses
      None
Comment: HEAP unused
HeapMem 00000000

Symbol: HeapMem
   Definitions
      At line 57 in file Startup.s
   Uses
      None
Comment: HeapMem unused
__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 56 in file Startup.s
   Uses
      At line 214 in file Startup.s
Comment: __heap_base used once
__heap_limit 00000000

Symbol: __heap_limit
   Definitions
      At line 59 in file Startup.s
   Uses
      At line 215 in file Startup.s
Comment: __heap_limit used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

FaultISR 000000F6

Symbol: FaultISR
   Definitions
      At line 177 in file Startup.s
   Uses
      At line 86 in file Startup.s
      At line 178 in file Startup.s

IntDefaultHandler 000000F8

Symbol: IntDefaultHandler
   Definitions
      At line 187 in file Startup.s
   Uses
      At line 87 in file Startup.s
      At line 88 in file Startup.s
      At line 89 in file Startup.s
      At line 94 in file Startup.s
      At line 95 in file Startup.s
      At line 97 in file Startup.s
      At line 98 in file Startup.s
      At line 99 in file Startup.s
      At line 100 in file Startup.s
      At line 101 in file Startup.s
      At line 102 in file Startup.s
      At line 103 in file Startup.s
      At line 104 in file Startup.s
      At line 105 in file Startup.s
      At line 106 in file Startup.s
      At line 107 in file Startup.s
      At line 108 in file Startup.s
      At line 109 in file Startup.s
      At line 110 in file Startup.s
      At line 111 in file Startup.s
      At line 112 in file Startup.s
      At line 113 in file Startup.s
      At line 114 in file Startup.s
      At line 115 in file Startup.s
      At line 116 in file Startup.s
      At line 117 in file Startup.s
      At line 118 in file Startup.s
      At line 119 in file Startup.s
      At line 120 in file Startup.s
      At line 121 in file Startup.s
      At line 122 in file Startup.s
      At line 123 in file Startup.s
      At line 124 in file Startup.s
      At line 125 in file Startup.s
      At line 126 in file Startup.s
      At line 127 in file Startup.s
      At line 128 in file Startup.s
      At line 129 in file Startup.s
      At line 130 in file Startup.s
      At line 131 in file Startup.s
      At line 132 in file Startup.s
      At line 133 in file Startup.s
      At line 134 in file Startup.s
      At line 135 in file Startup.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 136 in file Startup.s
      At line 137 in file Startup.s
      At line 138 in file Startup.s
      At line 139 in file Startup.s
      At line 140 in file Startup.s
      At line 141 in file Startup.s
      At line 142 in file Startup.s
      At line 188 in file Startup.s

NmiSR 000000F4

Symbol: NmiSR
   Definitions
      At line 167 in file Startup.s
   Uses
      At line 85 in file Startup.s
      At line 168 in file Startup.s

RESET 00000000

Symbol: RESET
   Definitions
      At line 73 in file Startup.s
   Uses
      None
Comment: RESET unused
Reset_Handler 000000F0

Symbol: Reset_Handler
   Definitions
      At line 151 in file Startup.s
   Uses
      At line 84 in file Startup.s
      At line 150 in file Startup.s

__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 82 in file Startup.s
   Uses
      At line 81 in file Startup.s
Comment: __Vectors used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 202 in file Startup.s
   Uses
      None
Comment: .text unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Heap 00000000

Symbol: Heap
   Definitions
      At line 38 in file Startup.s
   Uses
      At line 58 in file Startup.s
Comment: Heap used once
Stack 00000100

Symbol: Stack
   Definitions
      At line 31 in file Startup.s
   Uses
      At line 47 in file Startup.s
      At line 83 in file Startup.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

__main 00000000

Symbol: __main
   Definitions
      At line 157 in file Startup.s
   Uses
      At line 158 in file Startup.s
Comment: __main used once
1 symbol
349 symbols in table
