<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\rvmdk\motor_demo.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\rvmdk\motor_demo.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 4.1 [Build 894]: Last Updated: Sun Jan 20 19:03:14 2013
<BR><P>
<H3>Maximum Stack Usage =         80 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; Display96x16x1Init &rArr; Display96x16x1DisplayOn &rArr; Display96x16x1WriteArray
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[6]">Reset_Handler</a>
 <LI><a href="#[1]">NmiSR</a>
 <LI><a href="#[2]">FaultISR</a>
 <LI><a href="#[3]">IntDefaultHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[a]">SysCtlDelay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">SysCtlDelay</a><BR>
 <LI><a href="#[1]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NmiSR</a><BR>
 <LI><a href="#[2]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">FaultISR</a><BR>
 <LI><a href="#[3]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">IntDefaultHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[2]">FaultISR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[3]">IntDefaultHandler</a> from startup_rvmdk.o(RESET) referenced 61 times from startup_rvmdk.o(RESET)
 <LI><a href="#[1]">NmiSR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[6]">Reset_Handler</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[4]">SysTickHandler</a> from motor_demo.o(i.SysTickHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[5]">main</a> from motor_demo.o(i.main) referenced from entry8.o(.ARM.Collect$$$$00000009)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[6]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[7]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[26]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[8]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[b]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[27]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[28]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8.o(.ARM.Collect$$$$00000009))

<P><STRONG><a name="[a]"></a>SysCtlDelay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sysctl.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1Init
</UL>

<P><STRONG><a name="[9]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[29]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[1c]"></a>BumpSensorDebouncer</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, sensors.o(i.BumpSensorDebouncer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BumpSensorDebouncer
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickHandler
</UL>

<P><STRONG><a name="[21]"></a>BumpSensorGetDebounced</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sensors.o(i.BumpSensorGetDebounced))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1f]"></a>BumpSensorsInit</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, sensors.o(i.BumpSensorsInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BumpSensorsInit
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c]"></a>Display96x16x1Clear</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, display96x16x1.o(i.Display96x16x1Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Display96x16x1Clear &rArr; Display96x16x1ClearLine &rArr; Display96x16x1WriteArray
</UL>
<BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1ClearLine
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1Init
</UL>

<P><STRONG><a name="[d]"></a>Display96x16x1ClearLine</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, display96x16x1.o(i.Display96x16x1ClearLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Display96x16x1ClearLine &rArr; Display96x16x1WriteArray
</UL>
<BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1WriteFirst
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1WriteFinal
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1WriteByte
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1WriteArray
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1Clear
</UL>

<P><STRONG><a name="[12]"></a>Display96x16x1DisplayOn</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, display96x16x1.o(i.Display96x16x1DisplayOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Display96x16x1DisplayOn &rArr; Display96x16x1WriteArray
</UL>
<BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1WriteFirst
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1WriteFinal
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1WriteArray
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1Init
</UL>

<P><STRONG><a name="[13]"></a>Display96x16x1Init</STRONG> (Thumb, 232 bytes, Stack size 24 bytes, display96x16x1.o(i.Display96x16x1Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Display96x16x1Init &rArr; Display96x16x1DisplayOn &rArr; Display96x16x1WriteArray
</UL>
<BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinConfigure
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1DisplayOn
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1Clear
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1WriteFirst
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1WriteFinal
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1WriteArray
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[15]"></a>Display96x16x1StringDraw</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, display96x16x1.o(i.Display96x16x1StringDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Display96x16x1StringDraw &rArr; Display96x16x1StringDrawLen &rArr; Display96x16x1WriteArray
</UL>
<BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1StringDrawLen
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16]"></a>Display96x16x1StringDrawLen</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, display96x16x1.o(i.Display96x16x1StringDrawLen))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Display96x16x1StringDrawLen &rArr; Display96x16x1WriteArray
</UL>
<BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1WriteFirst
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1WriteFinal
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1WriteByte
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1WriteArray
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1StringDraw
</UL>

<P><STRONG><a name="[14]"></a>GPIOPinConfigure</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinConfigure))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorsInit
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1Init
</UL>

<P><STRONG><a name="[18]"></a>LED_Off</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, io.o(i.LED_Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LED_Off
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDsInit
</UL>

<P><STRONG><a name="[1d]"></a>LED_On</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, io.o(i.LED_On))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LED_On
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1a]"></a>LED_Toggle</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, io.o(i.LED_Toggle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LED_Toggle
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickHandler
</UL>

<P><STRONG><a name="[17]"></a>LEDsInit</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, io.o(i.LEDsInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LEDsInit &rArr; LED_Off
</UL>
<BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Off
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22]"></a>MotorDir</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, motor.o(i.MotorDir))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[25]"></a>MotorRun</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, motor.o(i.MotorRun))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[23]"></a>MotorSpeed</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, motor.o(i.MotorSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MotorSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24]"></a>MotorStop</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, motor.o(i.MotorStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MotorStop
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[19]"></a>MotorsInit</STRONG> (Thumb, 300 bytes, Stack size 16 bytes, motor.o(i.MotorsInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MotorsInit
</UL>
<BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinConfigure
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1b]"></a>PushButtonDebouncer</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, io.o(i.PushButtonDebouncer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PushButtonDebouncer
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickHandler
</UL>

<P><STRONG><a name="[20]"></a>PushButtonGetDebounced</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, io.o(i.PushButtonGetDebounced))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1e]"></a>PushButtonsInit</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, io.o(i.PushButtonsInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PushButtonsInit
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4]"></a>SysTickHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, motor_demo.o(i.SysTickHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysTickHandler &rArr; BumpSensorDebouncer
</UL>
<BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BumpSensorDebouncer
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PushButtonDebouncer
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Toggle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[2b]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[2c]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[5]"></a>main</STRONG> (Thumb, 294 bytes, Stack size 16 bytes, motor_demo.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = main &rArr; Display96x16x1Init &rArr; Display96x16x1DisplayOn &rArr; Display96x16x1WriteArray
</UL>
<BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BumpSensorsInit
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BumpSensorGetDebounced
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorsInit
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorStop
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorSpeed
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorDir
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PushButtonsInit
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PushButtonGetDebounced
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDsInit
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_On
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1StringDraw
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry8.o(.ARM.Collect$$$$00000009)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[f]"></a>Display96x16x1WriteArray</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, display96x16x1.o(i.Display96x16x1WriteArray))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Display96x16x1WriteArray
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1StringDrawLen
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1Init
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1DisplayOn
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1ClearLine
</UL>

<P><STRONG><a name="[10]"></a>Display96x16x1WriteByte</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, display96x16x1.o(i.Display96x16x1WriteByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Display96x16x1WriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1StringDrawLen
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1ClearLine
</UL>

<P><STRONG><a name="[11]"></a>Display96x16x1WriteFinal</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, display96x16x1.o(i.Display96x16x1WriteFinal))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Display96x16x1WriteFinal
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1StringDrawLen
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1Init
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1DisplayOn
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1ClearLine
</UL>

<P><STRONG><a name="[e]"></a>Display96x16x1WriteFirst</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, display96x16x1.o(i.Display96x16x1WriteFirst))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Display96x16x1WriteFirst
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1StringDrawLen
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1Init
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1DisplayOn
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1ClearLine
</UL>

<P><STRONG><a name="[1]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
