<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\rvmdk\sound_demo.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\rvmdk\sound_demo.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 4.1 [Build 894]: Last Updated: Sat Nov 10 15:07:06 2012
<BR><P>
<H3>Maximum Stack Usage =        140 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; WaveGetTime &rArr; usnprintf &rArr; uvsnprintf &rArr; ustrncpy
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[8]">Reset_Handler</a>
 <LI><a href="#[1]">NmiSR</a>
 <LI><a href="#[2]">FaultISR</a>
 <LI><a href="#[3]">IntDefaultHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[c]">SysCtlDelay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">SysCtlDelay</a><BR>
 <LI><a href="#[1]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NmiSR</a><BR>
 <LI><a href="#[2]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">FaultISR</a><BR>
 <LI><a href="#[3]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">IntDefaultHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[7]">BufferCallback</a> from wav.o(i.BufferCallback) referenced from wav.o(i.WavePlayContinue)
 <LI><a href="#[2]">FaultISR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[3]">IntDefaultHandler</a> from startup_rvmdk.o(RESET) referenced 60 times from startup_rvmdk.o(RESET)
 <LI><a href="#[1]">NmiSR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[8]">Reset_Handler</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[5]">SoundIntHandler</a> from sound.o(i.SoundIntHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[4]">SysTickHandler</a> from sound_demo.o(i.SysTickHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[6]">main</a> from sound_demo.o(i.main) referenced from entry8.o(.ARM.Collect$$$$00000009)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[8]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[9]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[43]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[a]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[d]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[44]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[45]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8.o(.ARM.Collect$$$$00000009))

<P><STRONG><a name="[c]"></a>SysCtlDelay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sysctl.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1Init
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DACInit
</UL>

<P><STRONG><a name="[20]"></a>strlen</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1StringDrawCentered
</UL>

<P><STRONG><a name="[b]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[46]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>BumpSensorDebouncer</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, sensors.o(i.BumpSensorDebouncer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BumpSensorDebouncer
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickHandler
</UL>

<P><STRONG><a name="[3f]"></a>BumpSensorGetDebounced</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sensors.o(i.BumpSensorGetDebounced))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3d]"></a>BumpSensorsInit</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, sensors.o(i.BumpSensorsInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BumpSensorsInit
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e]"></a>DACClassDDis</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dac.o(i.DACClassDDis))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DACClassDDis &rArr; DACWriteRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DACWriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundClassDDis
</UL>

<P><STRONG><a name="[10]"></a>DACClassDEn</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dac.o(i.DACClassDEn))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DACClassDEn &rArr; DACWriteRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DACWriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundClassDEn
</UL>

<P><STRONG><a name="[11]"></a>DACInit</STRONG> (Thumb, 310 bytes, Stack size 24 bytes, dac.o(i.DACInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DACInit &rArr; DACWriteRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinConfigure
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DACWriteRegister
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DACReadRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundInit
</UL>

<P><STRONG><a name="[15]"></a>Display96x16x1Clear</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, display96x16x1.o(i.Display96x16x1Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Display96x16x1Clear &rArr; Display96x16x1ClearLine &rArr; Display96x16x1WriteArray
</UL>
<BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1ClearLine
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1Init
</UL>

<P><STRONG><a name="[16]"></a>Display96x16x1ClearLine</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, display96x16x1.o(i.Display96x16x1ClearLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Display96x16x1ClearLine &rArr; Display96x16x1WriteArray
</UL>
<BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1WriteFirst
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1WriteFinal
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1WriteByte
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1WriteArray
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1StringDrawCentered
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1Clear
</UL>

<P><STRONG><a name="[1b]"></a>Display96x16x1DisplayOn</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, display96x16x1.o(i.Display96x16x1DisplayOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Display96x16x1DisplayOn &rArr; Display96x16x1WriteArray
</UL>
<BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1WriteFirst
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1WriteFinal
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1WriteArray
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1Init
</UL>

<P><STRONG><a name="[1c]"></a>Display96x16x1Init</STRONG> (Thumb, 232 bytes, Stack size 24 bytes, display96x16x1.o(i.Display96x16x1Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Display96x16x1Init &rArr; Display96x16x1DisplayOn &rArr; Display96x16x1WriteArray
</UL>
<BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1DisplayOn
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1Clear
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1WriteFirst
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1WriteFinal
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1WriteArray
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinConfigure
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1d]"></a>Display96x16x1StringDraw</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, display96x16x1.o(i.Display96x16x1StringDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Display96x16x1StringDraw &rArr; Display96x16x1StringDrawLen &rArr; Display96x16x1WriteArray
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1StringDrawLen
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1f]"></a>Display96x16x1StringDrawCentered</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, display96x16x1.o(i.Display96x16x1StringDrawCentered))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Display96x16x1StringDrawCentered &rArr; Display96x16x1StringDrawLen &rArr; Display96x16x1WriteArray
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1StringDrawLen
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1ClearLine
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1e]"></a>Display96x16x1StringDrawLen</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, display96x16x1.o(i.Display96x16x1StringDrawLen))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Display96x16x1StringDrawLen &rArr; Display96x16x1WriteArray
</UL>
<BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1WriteFirst
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1WriteFinal
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1WriteByte
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1WriteArray
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1StringDrawCentered
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1StringDraw
</UL>

<P><STRONG><a name="[22]"></a>GPIODirModeSet</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gpio.o(i.GPIODirModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeI2S
</UL>

<P><STRONG><a name="[23]"></a>GPIOPadConfigSet</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, gpio.o(i.GPIOPadConfigSet))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeI2S
</UL>

<P><STRONG><a name="[12]"></a>GPIOPinConfigure</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinConfigure))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundInit
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1Init
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DACInit
</UL>

<P><STRONG><a name="[21]"></a>GPIOPinTypeI2S</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeI2S))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeI2S
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundInit
</UL>

<P><STRONG><a name="[2c]"></a>I2SIntClear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, i2s.o(i.I2SIntClear))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundIntHandler
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundInit
</UL>

<P><STRONG><a name="[2d]"></a>I2SIntStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, i2s.o(i.I2SIntStatus))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundIntHandler
</UL>

<P><STRONG><a name="[2f]"></a>I2SMasterClockSelect</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, i2s.o(i.I2SMasterClockSelect))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundSetFormat
</UL>

<P><STRONG><a name="[30]"></a>I2STxConfigSet</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, i2s.o(i.I2STxConfigSet))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundSetFormat
</UL>

<P><STRONG><a name="[27]"></a>I2STxEnable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, i2s.o(i.I2STxEnable))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundInit
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundBufferPlay
</UL>

<P><STRONG><a name="[2b]"></a>I2STxFIFOLimitSet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, i2s.o(i.I2STxFIFOLimitSet))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundInit
</UL>

<P><STRONG><a name="[25]"></a>LED_Off</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, io.o(i.LED_Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LED_Off
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDsInit
</UL>

<P><STRONG><a name="[3b]"></a>LED_On</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, io.o(i.LED_On))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LED_On
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[32]"></a>LED_Toggle</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, io.o(i.LED_Toggle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LED_Toggle
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickHandler
</UL>

<P><STRONG><a name="[24]"></a>LEDsInit</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, io.o(i.LEDsInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LEDsInit &rArr; LED_Off
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Off
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[33]"></a>PushButtonDebouncer</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, io.o(i.PushButtonDebouncer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PushButtonDebouncer
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickHandler
</UL>

<P><STRONG><a name="[3e]"></a>PushButtonGetDebounced</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, io.o(i.PushButtonGetDebounced))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3c]"></a>PushButtonsInit</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, io.o(i.PushButtonsInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PushButtonsInit
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26]"></a>SoundBufferPlay</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, sound.o(i.SoundBufferPlay))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SoundBufferPlay
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2STxEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WavePlayContinue
</UL>

<P><STRONG><a name="[28]"></a>SoundClassDDis</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sound.o(i.SoundClassDDis))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SoundClassDDis &rArr; DACClassDDis &rArr; DACWriteRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DACClassDDis
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WavePlayContinue
</UL>

<P><STRONG><a name="[29]"></a>SoundClassDEn</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sound.o(i.SoundClassDEn))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SoundClassDEn &rArr; DACClassDEn &rArr; DACWriteRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DACClassDEn
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WavePlayStart
</UL>

<P><STRONG><a name="[2a]"></a>SoundInit</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, sound.o(i.SoundInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SoundInit &rArr; DACInit &rArr; DACWriteRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2STxFIFOLimitSet
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2STxEnable
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2SIntClear
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeI2S
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinConfigure
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DACInit
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5]"></a>SoundIntHandler</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, sound.o(i.SoundIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SoundIntHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2SIntStatus
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2SIntClear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SoundSetFormat</STRONG> (Thumb, 254 bytes, Stack size 24 bytes, sound.o(i.SoundSetFormat))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SoundSetFormat &rArr; SysCtlI2SMClkSet
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlI2SMClkSet
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2STxConfigSet
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2SMasterClockSelect
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaveOpen
</UL>

<P><STRONG><a name="[13]"></a>SysCtlClockGet</STRONG> (Thumb, 514 bytes, Stack size 8 bytes, sysctl.o(i.SysCtlClockGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DACInit
</UL>

<P><STRONG><a name="[31]"></a>SysCtlI2SMClkSet</STRONG> (Thumb, 204 bytes, Stack size 4 bytes, sysctl.o(i.SysCtlI2SMClkSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SysCtlI2SMClkSet
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundSetFormat
</UL>

<P><STRONG><a name="[4]"></a>SysTickHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, sound_demo.o(i.SysTickHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysTickHandler &rArr; BumpSensorDebouncer
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BumpSensorDebouncer
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PushButtonDebouncer
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Toggle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>WaveGetTime</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, wav.o(i.WaveGetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = WaveGetTime &rArr; usnprintf &rArr; uvsnprintf &rArr; ustrncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[37]"></a>WaveOpen</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, wav.o(i.WaveOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = WaveOpen &rArr; SoundSetFormat &rArr; SysCtlI2SMClkSet
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundSetFormat
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[38]"></a>WavePlayContinue</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, wav.o(i.WavePlayContinue))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = WavePlayContinue &rArr; SoundClassDDis &rArr; DACClassDDis &rArr; DACWriteRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaveRead
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundClassDDis
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundBufferPlay
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3a]"></a>WavePlayStart</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, wav.o(i.WavePlayStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WavePlayStart &rArr; SoundClassDEn &rArr; DACClassDEn &rArr; DACWriteRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundClassDEn
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[40]"></a>WaveStop</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wav.o(i.WaveStop))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[47]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[48]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[49]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[6]"></a>main</STRONG> (Thumb, 438 bytes, Stack size 48 bytes, sound_demo.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = main &rArr; WaveGetTime &rArr; usnprintf &rArr; uvsnprintf &rArr; ustrncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaveStop
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WavePlayStart
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WavePlayContinue
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaveOpen
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaveGetTime
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundInit
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BumpSensorsInit
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BumpSensorGetDebounced
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PushButtonsInit
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PushButtonGetDebounced
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDsInit
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_On
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1StringDrawCentered
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1StringDraw
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1Init
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1DisplayOn
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1Clear
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry8.o(.ARM.Collect$$$$00000009)
</UL>
<P><STRONG><a name="[36]"></a>usnprintf</STRONG> (Thumb, 18 bytes, Stack size 24 bytes, ustdlib.o(i.usnprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = usnprintf &rArr; uvsnprintf &rArr; ustrncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uvsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaveGetTime
</UL>

<P><STRONG><a name="[42]"></a>ustrncpy</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, ustdlib.o(i.ustrncpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ustrncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uvsnprintf
</UL>

<P><STRONG><a name="[41]"></a>uvsnprintf</STRONG> (Thumb, 578 bytes, Stack size 36 bytes, ustdlib.o(i.uvsnprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = uvsnprintf &rArr; ustrncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usnprintf
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[14]"></a>DACReadRegister</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, dac.o(i.DACReadRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DACReadRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DACInit
</UL>

<P><STRONG><a name="[f]"></a>DACWriteRegister</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, dac.o(i.DACWriteRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DACWriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DACInit
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DACClassDEn
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DACClassDDis
</UL>

<P><STRONG><a name="[18]"></a>Display96x16x1WriteArray</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, display96x16x1.o(i.Display96x16x1WriteArray))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Display96x16x1WriteArray
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1StringDrawLen
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1Init
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1DisplayOn
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1ClearLine
</UL>

<P><STRONG><a name="[19]"></a>Display96x16x1WriteByte</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, display96x16x1.o(i.Display96x16x1WriteByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Display96x16x1WriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1StringDrawLen
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1ClearLine
</UL>

<P><STRONG><a name="[1a]"></a>Display96x16x1WriteFinal</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, display96x16x1.o(i.Display96x16x1WriteFinal))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Display96x16x1WriteFinal
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1StringDrawLen
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1Init
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1DisplayOn
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1ClearLine
</UL>

<P><STRONG><a name="[17]"></a>Display96x16x1WriteFirst</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, display96x16x1.o(i.Display96x16x1WriteFirst))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Display96x16x1WriteFirst
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1StringDrawLen
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1Init
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1DisplayOn
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display96x16x1ClearLine
</UL>

<P><STRONG><a name="[1]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>BufferCallback</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, wav.o(i.BufferCallback))
<BR>[Address Reference Count : 1]<UL><LI> wav.o(i.WavePlayContinue)
</UL>
<P><STRONG><a name="[39]"></a>WaveRead</STRONG> (Thumb, 68 bytes, Stack size 20 bytes, wav.o(i.WaveRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = WaveRead
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WavePlayContinue
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
